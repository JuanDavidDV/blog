class BlogPosts::CoverImagesController < ApplicationController
  include ActionView::RecordIdentifier  # This module adds the DOM id method
  before_action :authenticate_user!
  before_action :set_blog_post

  def destroy
    @blog_post.cover_image.purge_later  # Will remove image in a background job

    # This was developed to handle the information that is deleted in the content area, when the user deletes the cover image, in order to keep the data entered by the user
    respond_to do |format|
      format.html { redirect_to edit_blog_post_path(@blog_post) }
      format.turbo_stream { render turbo_stream: turbo_stream.remove(dom_id(@blog_post, :cover_image)) }  # Instead of redirect to form page, it will return a small html snipped that turbo JS will use to make change to the page
    end
  end

  private

  def set_blog_post
    @blog_post = BlogPost.find(params[:blog_post_id]) # blog_post_id generated by Rails as a result of nested route, this id reference the blog_post id and not the image/attachement id
  end
end
